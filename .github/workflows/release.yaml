name: Release

on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      published: ${{ steps.release.outputs.published }}
      release-git-tag: ${{ steps.release.outputs.release-git-tag }}
    steps:
      - uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
      - uses: actions/checkout@v5
        with:
          submodules: recursive
          token: ${{ steps.app-token.outputs.token }}
      - name: Release
        id: release
        uses: ahmadnassri/action-semantic-release@v2.2.8
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}

  docker:
    needs: release
    if: ${{ needs.release.outputs.published == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v5
      - uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}},value=${{ needs.release.outputs.release-git-tag }}
            type=sha
            type=ref,event=branch
      - name: Build Docker image using Makefile
        run: |
          make build/prod
      - name: Retag and push Docker image
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
        run: |
          IMAGE=ghcr.io/${{ github.repository }}
          for tag in $TAGS; do
            docker tag comic-safe-prod $tag
            docker push $tag
          done
